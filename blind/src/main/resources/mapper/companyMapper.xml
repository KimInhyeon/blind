<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksinfo.blind.manage.mapper.CompanyMapper">
	<select id="getTotalRecordsCount" parameterType="com.ksinfo.blind.manage.vo.CompanySearchVO" resultType="_int">
		SELECT COUNT(*)
		FROM blind.company_mgt
		<if test="searchTarget eq 'businessTypeName'">
			INNER JOIN blind.business_type_mst
				ON company_mgt.business_type_code = business_type_mst.business_type_code
		</if>
		<where>
			<if test="verifyFlag lt 3">
				verify_flag = CAST(#{verifyFlag} AS CHAR)
			</if>
			<if test="closingFlag lt 2">
				AND closing_flag = CAST(#{closingFlag} AS CHAR)
			</if>
			<if test="searchTarget neq ''">
				AND
				<choose>
					<when test="searchTarget eq 'companyName'">company_name</when>
					<when test="searchTarget eq 'businessTypeName'">business_type_name</when>
					<when test="searchTarget eq 'companyAddress'">company_address</when>
					<when test="searchTarget eq 'companyDomain'">company_domain</when>
					<otherwise>company_id</otherwise>
				</choose>
				LIKE '%' || #{searchKeyword} || '%'
			</if>
				AND company_mgt.logical_del_flag = '0';
		</where>
	</select>

	<select id="getCompanyList" parameterType="com.ksinfo.blind.manage.vo.CompanySearchVO" resultType="com.ksinfo.blind.manage.vo.CompanyVO">
		SELECT
			company_mgt.company_id,
			verify_flag,
			closing_flag,
			company_name,
			business_type_code,
			company_address,
			TO_CHAR(founding_date, 'YYYY-MM-DD') AS founding_date,
			workers_count,
			company_domain,
			company_homepage,
			company_explain,
			user_nickName,
			TO_CHAR(app_date, 'YYYY-MM-DD') AS app_date
		FROM blind.company_mgt
		INNER JOIN blind.user_mgt
			ON company_mgt.user_id = user_mgt.user_id
		<where>
			<if test="searchKeyword neq ''">
				<choose>
					<when test="searchTarget eq 'companyName'">company_name</when>
					<when test="searchTarget eq 'businessTypeName'">business_type_name</when>
					<when test="searchTarget eq 'companyAddress'">company_address</when>
					<when test="searchTarget eq 'companyDomain'">company_domain</when>
					<otherwise>company_id</otherwise>
				</choose>
				LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="verifyFlag lt 3">
				AND verify_flag = CAST(#{verifyFlag} AS CHAR)
			</if>
			<if test="closingFlag lt 2">
				AND closing_flag = CAST(#{closingFlag} AS CHAR)
			</if>
				AND company_mgt.logical_del_flag = '0'
		</where>
		ORDER BY company_id;
	</select>

	<select id="getBusinessTypeList" resultType="com.ksinfo.blind.manage.vo.BusinessTypeVO">
		SELECT *
		FROM blind.business_type_mst
		WHERE logical_del_flag = '0'
		ORDER BY business_type_id;
	</select>

	<insert id="applyCompany">
		INSERT INTO
			blind.company_mgt
		VALUES (
			DEFAULT,
			#{userId},
			#{companyName},
			#{businessTypeCode},
			#{companyAddress},
			CAST(#{foundingDate} AS DATE),
			#{workersCount},
			now(),
			#{companyDomain},
			#{companyHomepage},
			#{companyExplain},
			#{verifyFlag},
			#{closingFlag},
			#{userId},
			now(),
			#{userId},
			now(),
			'0'
		);
	</insert>

	<update id="updateCompany">
		UPDATE
			blind.company_mgt
		SET
			company_name = #{companyName},
			business_type_code = #{businessTypeCode},
			company_address = #{companyAddress},
			founding_date = CAST(#{foundingDate} AS DATE),
			workers_count = #{workersCount},
			company_domain = #{companyDomain},
			company_homepage = #{companyHomepage},
			company_explain = #{companyExplain},
			closing_flag = #{closingFlag},
			rec_update_user_id = #{userId},
			rec_update_date = now()
		WHERE
			company_id = CAST(#{companyId} AS BIGINT)
			AND logical_del_flag = '0';
	</update>

	<update id="updateVerify">
		UPDATE
			blind.company_mgt
		SET
			verify_flag = #{verifyFlag},
			rec_update_user_id = #{userId},
			rec_update_date = now()
		WHERE
			company_id IN
				<foreach collection="companyIdList" item="companyId" open="(" close=")" separator=",">
					CAST(#{companyId} AS BIGINT)
				</foreach>
			AND logical_del_flag = '0';
	</update>
</mapper>