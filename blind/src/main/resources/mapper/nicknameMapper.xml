<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksinfo.blind.common.mapper.NicknameMapper">
	<select id="isDuplicatedNickname" resultType="_boolean">
		SELECT COUNT(*)
		FROM blind.user_mgt
		WHERE user_nickname = #{nickname}
			AND last_generation_flag = '1'
			AND logical_del_flag = '0';
	</select>

	<update id="invalidateOldNickname" parameterType="com.ksinfo.blind.security.Account">
		UPDATE blind.user_mgt
		SET last_generation_flag = '0',
			rec_update_user_id = #{userId},
			rec_update_date = NOW()
		WHERE user_id = #{userId}
			AND user_generation = #{userGeneration};
		<selectKey keyProperty="reportedCount" resultType="_int" order="AFTER">
			SELECT reported_count
			FROM blind.user_mgt
			WHERE user_id = #{userId}
				AND user_generation = #{userGeneration};
		</selectKey>
	</update>

	<insert id="validateNewNickname" parameterType="com.ksinfo.blind.security.Account">
		INSERT INTO blind.user_mgt (
			user_id, user_generation, last_generation_flag, user_password, user_email,
			user_nickname, nickname_change_date, company_id, user_auth, reported_count,
			rec_create_user_id, rec_create_date, rec_update_user_id, rec_update_date, logical_del_flag
		) VALUES (
			#{userId}, #{userGeneration}, '1', #{userPassword}, #{userEmail},
			#{userNickname}, NOW(), #{companyId}, #{userAuth}, #{reportedCount},
			#{userId}, NOW(), #{userId}, NOW(), '0'
		);
		<selectKey keyProperty="nicknameChangeDate"	resultType="date" order="AFTER">
			SELECT nickname_change_date
			FROM blind.user_mgt
			WHERE user_id = #{userId}
				AND user_generation = #{userGeneration};
		</selectKey>
	</insert>
</mapper>