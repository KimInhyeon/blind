<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksinfo.blind.board.mapper.BoardMapper">
	<sql id="getBoardList">
		SELECT board_id AS boardId
			, board_topic_name AS boardTopicName
		FROM blind.board_mgt
		WHERE closed_flag = '0'
			AND logical_del_flag = '0'
		ORDER BY board_order
	</sql>

	<select id="getBoardList" resultType="com.ksinfo.blind.board.vo.BoardVO">
		<include refid="getBoardList"/>;
	</select>

	<select id="getSearchBoardList" resultType="com.ksinfo.blind.board.vo.BoardVO">
		SELECT 0 AS boardId
			, 'トピック全体' AS boardTopicName
		UNION ALL (
			<include refid="getBoardList"/>
		);
	</select>

	<select id="getBoardPostList" parameterType="com.ksinfo.blind.board.dto.SearchBoardPostDto"
			resultType="com.ksinfo.blind.board.vo.BoardPostVO">
		SELECT board_id AS boardId,
			board_topic_name AS boardTopicName,
			post_id AS postId,
			post_title AS postTitle,
			post_contents AS postContents,
			CASE WHEN us.logical_del_flag = '0' THEN company_id ELSE 0 END AS companyId,
			CASE WHEN us.logical_del_flag = '0' THEN company_name END AS companyName,
			CASE WHEN us.logical_del_flag = '0' THEN user_nickname ELSE '脱会した会員' END AS userNickname,
			CASE WHEN NOW() - post_create_date > INTERVAL '1 week'
					THEN TO_CHAR(post_create_date, 'MM.DD')
				WHEN NOW() - post_create_date > INTERVAL '2 day'
					THEN EXTRACT(DAYS FROM NOW() - post_create_date) || '日前'
				WHEN NOW() - post_create_date > INTERVAL '1 day'
					THEN '昨日'
				WHEN NOW() - post_create_date > INTERVAL '1 hour'
					THEN EXTRACT(HOURS FROM NOW() - post_create_date) || '時間前'
				WHEN NOW() - post_create_date > INTERVAL '1 minute'
					THEN EXTRACT(MINS FROM NOW() - post_create_date) || '分前'
				ELSE 'だった今'
			END AS postCreateDate,
			post_count AS postCount, (
				SELECT COUNT(*)
				FROM blind.post_recommend_inf AS pre
				WHERE pre.post_id = po.post_id
					AND pre.post_recommend_flag = '1'
			) AS postRecommendCount, (
				SELECT COUNT(*)
				FROM blind.reply_mgt AS re
				WHERE re.post_id = po.post_id
					AND re.logical_del_flag = '0'
			) AS replyCount,
		<choose>
			<when test="userId gt 0">
				(SELECT EXISTS(
					SELECT
					FROM blind.bookmark_mgt AS bk
					WHERE bk.user_id = #{userId}
						AND bk.post_id = po.post_id
						AND bk.logical_del_flag = '0'
				))
			</when>
			<otherwise>false</otherwise>
		</choose> AS bookmarked
		FROM blind.post_mgt AS po
			INNER JOIN blind.board_mgt AS bo USING(board_id)
			INNER JOIN blind.post_count_inf USING(post_id)
			INNER JOIN blind.user_mgt AS us
				ON po.user_id = us.user_id AND last_generation_flag = '1'
			INNER JOIN blind.company_mgt USING(company_id)
		WHERE po.logical_del_flag = '0'
			AND bo.logical_del_flag = '0'
		<if test="boardId gt 0">
			AND board_id = #{boardId}
		</if>
		<if test="postId gt 0">
			AND post_id <![CDATA[<]]> #{postId}
		</if>
		ORDER BY post_id DESC
		FETCH FIRST 20 ROWS ONLY;
	</select>
</mapper>