<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksinfo.blind.search.mapper.SearchMapper">

<!-- 1.회사관련 xml -->
<!-- 1.1.회사의 프로필 정보 수신 -->
<select id="getSearchCompany" parameterType="String" resultType="com.ksinfo.blind.search.dto.CompanyDto"> 
    SELECT 
    company_id
    ,company_name
    ,company_address
     FROM blind.company_mgt	
    where company_name= #{searchKeyword};
</select>

<!-- 1.2.회사의 리뷰정보 수신 -->
<select id="getCompanyReviews" parameterType="int" resultType="com.ksinfo.blind.search.dto.CompanyReviewDto"> 
SELECT 
	job_group_mst.job_group_name as jobGroupName <!-- sql상으로는 나오지만 문제는 스프링 data상으로는 보관되지 않는다는 것. -->
	, company_review_mgt.all_point
	, company_review_mgt.career_point
	, company_review_mgt.work_life_balance_point
	, company_review_mgt.pay_point
	, company_review_mgt.company_culture_point
	, company_review_mgt.head_point
	, company_review_mgt.work_start_date
	, company_review_mgt.work_end_date
	, company_review_mgt.simple_comment
	, company_review_mgt.resign_reason
	, company_review_mgt.work_area
	, company_review_mgt.advantages
	, company_review_mgt.disadvantages
	, company_mgt.company_name as companyName
FROM blind.company_review_mgt
LEFT JOIN blind.job_group_mst
ON blind.job_group_mst.job_group_code = blind.company_review_mgt.job_group_code	
LEFT JOIN blind.company_mgt
ON blind.company_review_mgt.company_id = #{jobGroupCode} ;	
</select> 
<!-- 회사관련 xml 끝 -->



<!-- 2.포스트 관련 xml -->
<!-- 2.1. 게시글 출력관련 -->
<!-- 2.1.1. 기본검색(포스트-정렬옵션-최신일순 정렬) -->
<select id="getSearchPosts" resultType="com.ksinfo.blind.search.dto.PostDto"> 
SELECT DISTINCT
   blind.board_mgt.board_topic_name           --토픽(게시판)명
   ,blind.post_mgt.post_title                 --게시글 주제
   ,blind.post_mgt.post_contents              --게시글 내용
   ,blind.company_mgt.company_name          --근무기업명
   ,blind.user_mgt.user_nickname              --작성자의 닉네임
   ,COALESCE(blind.post_count_inf.post_count, 0) AS post_count   --글의 조회수
   ,COALESCE(count_recommend_inf.recommend_count, 0) AS recommend_count  --글의 추천수
   ,COALESCE(count_reply_inf.reply_count, 0) AS  reply_count       --글의 댓글수
   ,blind.post_mgt.post_create_date           --게시글의 최초작성일
FROM blind.post_mgt
LEFT JOIN blind.board_mgt            --토픽(게시판)명
   ON blind.post_mgt.board_id = blind.board_mgt.board_id
LEFT JOIN blind.user_mgt            --작성자의 닉네임
   ON blind.post_mgt.user_id = blind.user_mgt.user_id
LEFT JOIN blind.post_count_inf         --글의 조회수
   ON blind.post_mgt.post_id = blind.post_count_inf.post_id
LEFT JOIN 
  (SELECT 
    COUNT(*) AS recommend_count
   ,post_id						--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
	blind.post_recommend_inf      --게시글의 추천수
  GROUP BY post_id) count_recommend_inf
	ON blind.post_mgt.post_id = count_recommend_inf.post_id
LEFT JOIN blind.company_mgt    --근무기업명
   ON blind.user_mgt.company_id = blind.company_mgt.company_id 
LEFT JOIN 
  (SELECT 
    COUNT(*) AS reply_count
   ,post_id						--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
   blind.reply_mgt
  GROUP BY post_id) count_reply_inf
ON blind.post_mgt.post_id = count_reply_inf.post_id 
where blind.post_mgt.post_title like '%'|| #{searchKeyword} ||'%'
order by blind.post_mgt.post_create_date DESC;
</select>

<!-- 2.1.2. [왼쪽드롭박스버튼] 토픽개수및 포스트들의 갯수 카운트 리턴 -->
<select id="getBoardNameAndIdAndCount" parameterType="String"  resultType="com.ksinfo.blind.search.dto.BoardDto"> 
    SELECT 
		board.board_topic_name
		,board.board_id
		,count(*) as postCount
	from blind.post_mgt post
	inner join blind.board_mgt board on
		post.board_id = board.board_id and
		post.post_title like '%'|| #{searchKeyword} ||'%'
	group by board.board_id
	order by board.board_id ASC;
</select>	


<!-- 2.2.포스트-토픽선택(왼쪽드롭박스) : 1개의 토픽만 선택시 리턴 -->
<select id="getPostSelectTopic" parameterType="java.util.Map" resultType="com.ksinfo.blind.search.dto.PostDto"> 
SELECT DISTINCT
   blind.board_mgt.board_topic_name           --토픽(게시판)명
   ,blind.post_mgt.post_title                 --게시글 주제
   ,blind.post_mgt.post_contents              --게시글 내용
   ,blind.company_mgt.company_name          --근무기업명
   ,blind.user_mgt.user_nickname              --작성자의 닉네임
   ,COALESCE(blind.post_count_inf.post_count, 0) AS post_count      --글의 조회수
   ,COALESCE(count_recommend_inf.recommend_count, 0) AS recommend_count  --글의 추천수
   ,COALESCE(count_reply_inf.reply_count, 0) AS  reply_count       --글의 댓글수
   ,blind.post_mgt.post_create_date           --게시글의 최초작성일
FROM blind.post_mgt
LEFT JOIN blind.board_mgt            --토픽(게시판)명
   ON blind.post_mgt.board_id = blind.board_mgt.board_id
LEFT JOIN blind.user_mgt            --작성자의 닉네임
   ON blind.post_mgt.user_id = blind.user_mgt.user_id
LEFT JOIN blind.post_count_inf         --글의 조회수
   ON blind.post_mgt.post_id = blind.post_count_inf.post_id
LEFT JOIN 
  (SELECT 
    COUNT(*) AS recommend_count
   ,post_id						--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
	blind.post_recommend_inf      --게시글의 추천수
  GROUP BY post_id) count_recommend_inf
	ON blind.post_mgt.post_id = count_recommend_inf.post_id
LEFT JOIN blind.company_mgt    --근무기업명
   ON blind.user_mgt.company_id = blind.company_mgt.company_id 
LEFT JOIN 
  (SELECT 
    COUNT(*) AS reply_count
   ,post_id						--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
   blind.reply_mgt
  GROUP BY post_id) count_reply_inf
ON blind.post_mgt.post_id = count_reply_inf.post_id 
where blind.post_mgt.post_title like '%'|| #{searchKeyword} ||'%' 
	<if test="boardId neq -1">
		and blind.post_mgt.board_id =  #{boardId}
	</if>
ORDER BY post_mgt.post_create_date DESC;
</select>
	 
<!-- 2.3. 콤보박스의 정렬기준 옵션_추천순 -->	
<!-- 2.3.1. 콤보박스의 포스트-정렬옵션-최신일  -->
<select id="getSortPostBylatestDate" parameterType="java.util.Map" resultType="com.ksinfo.blind.search.dto.PostDto"> 
SELECT DISTINCT
   blind.board_mgt.board_topic_name           --토픽(게시판)명
   ,blind.post_mgt.post_title                 --게시글 주제
   ,blind.post_mgt.post_contents              --게시글 내용
   ,blind.company_mgt.company_name            --근무기업명
   ,blind.user_mgt.user_nickname              --작성자의 닉네임
   ,COALESCE(blind.post_count_inf.post_count, 0) AS post_count   --글의 조회수
   ,COALESCE(count_recommend_inf.recommend_count, 0) AS recommend_count  --글의 추천수
   ,COALESCE(count_reply_inf.reply_count, 0) AS  reply_count       --글의 댓글수
   ,blind.post_mgt.post_create_date           --게시글의 최초작성일
FROM blind.post_mgt
LEFT JOIN blind.board_mgt     			      --토픽(게시판)명
   ON blind.post_mgt.board_id = blind.board_mgt.board_id
LEFT JOIN blind.user_mgt            		  --작성자의 닉네임
   ON blind.post_mgt.user_id = blind.user_mgt.user_id
LEFT JOIN blind.post_count_inf         		  --글의 조회수
   ON blind.post_mgt.post_id = blind.post_count_inf.post_id
LEFT JOIN 
  (SELECT 
    COUNT(*) AS recommend_count
   ,post_id								  	 --ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
	blind.post_recommend_inf   			     --게시글의 추천수
  GROUP BY post_id) count_recommend_inf
	ON blind.post_mgt.post_id = count_recommend_inf.post_id
LEFT JOIN blind.company_mgt    				--근무기업명
   ON blind.user_mgt.company_id = blind.company_mgt.company_id 
LEFT JOIN 
  (SELECT 
    COUNT(*) AS reply_count
   ,post_id			--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
   blind.reply_mgt
  GROUP BY post_id) count_reply_inf
ON blind.post_mgt.post_id = count_reply_inf.post_id 
where blind.post_mgt.post_title like '%'|| #{searchKeyword} ||'%'
	<if test="boardId neq -1">
		and blind.post_mgt.board_id =  #{boardId}
	</if>
ORDER BY post_create_date DESC;
</select>

<!-- 2.3.2. 콤보박스의 포스트-정렬옵션-추천순  -->
<select id="getSortPostByRecommend" parameterType="java.util.Map" resultType="com.ksinfo.blind.search.dto.PostDto"> 
SELECT DISTINCT
   blind.board_mgt.board_topic_name           --토픽(게시판)명
   ,blind.post_mgt.post_title                 --게시글 주제
   ,blind.post_mgt.post_contents              --게시글 내용
   ,blind.company_mgt.company_name            --근무기업명
   ,blind.user_mgt.user_nickname              --작성자의 닉네임
   ,COALESCE(blind.post_count_inf.post_count, 0) AS post_count   --글의 조회수
   ,COALESCE(count_recommend_inf.recommend_count, 0) AS recommend_count  --글의 추천수
   ,COALESCE(count_reply_inf.reply_count, 0) AS  reply_count       --글의 댓글수
   ,blind.post_mgt.post_create_date           --게시글의 최초작성일
FROM blind.post_mgt
LEFT JOIN blind.board_mgt     			      --토픽(게시판)명
   ON blind.post_mgt.board_id = blind.board_mgt.board_id
LEFT JOIN blind.user_mgt            		  --작성자의 닉네임
   ON blind.post_mgt.user_id = blind.user_mgt.user_id
LEFT JOIN blind.post_count_inf         		  --글의 조회수
   ON blind.post_mgt.post_id = blind.post_count_inf.post_id
LEFT JOIN 
  (SELECT 
    COUNT(*) AS recommend_count
   ,post_id								  	 --ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
	blind.post_recommend_inf   			     --게시글의 추천수
  GROUP BY post_id) count_recommend_inf
	ON blind.post_mgt.post_id = count_recommend_inf.post_id
LEFT JOIN blind.company_mgt    				--근무기업명
   ON blind.user_mgt.company_id = blind.company_mgt.company_id 
LEFT JOIN 
  (SELECT 
    COUNT(*) AS reply_count
   ,post_id			--ON blind.post_mgt.post_id = count_inf.post_id를 위해 추가.
  FROM
   blind.reply_mgt
  GROUP BY post_id) count_reply_inf
ON blind.post_mgt.post_id = count_reply_inf.post_id 
where blind.post_mgt.post_title like '%'|| #{searchKeyword} ||'%'
	<if test="boardId neq -1">
		and blind.post_mgt.board_id =  #{boardId}
	</if>
ORDER BY recommend_count DESC;
</select>		 

</mapper>
