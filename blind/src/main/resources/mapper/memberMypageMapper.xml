<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksinfo.blind.member.mapper.MemberMypageMapper">

<!-- 1.유저(정회원)가 근무하는 회사의 이름 가져오기 -->
<select id="getUsersCompanyName" parameterType="int" resultType="String"> 
select 
	"blind".company_mgt.company_name
from 
	"blind".company_mgt
where "blind".company_mgt.company_id = #{companyId};
</select>


<!-- 2.유저가 이번 달에 작성한 포스트의 갯수를 리턴 -->
<select id="getPostCountsThisMonth" parameterType="int" resultType="int"> 
<![CDATA[ 
SELECT 
	count("blind".post_mgt.post_create_date) 
FROM 
	"blind".post_mgt
where
	"blind".post_mgt.user_id =  #{userId}
and
	"blind".post_mgt.post_create_date >= cast(date_trunc('month',current_date) as date) --이번달의 시작일부터
and
	"blind".post_mgt.post_create_date <= (date_trunc('MONTH', current_date) + INTERVAL '1 MONTH - 1 day'); 
]]>   <!-- 부등호(>=, <=)사용시 <![CDATA[ 를 활용하는 것도 방법임을 확인. -->
</select>


<!-- 3.유저가 이번달에 작성한 포스트들이 얻은 좋아요의 갯수를 카운트하여 리턴.  -->
<select id="getPostLikeCountThisMonth" parameterType="int" resultType="int"> 
<![CDATA[ 
SELECT 
	count(blind.post_recommend_inf.post_id)
FROM 
	blind.post_recommend_inf	
LEFT JOIN blind.post_mgt
	ON blind.post_mgt.post_id = blind.post_recommend_inf.post_id
where 
	blind.post_mgt.user_id = #{userId}  -- 조건1.작성자 본인의 글인지를 확인
and
	"blind".post_mgt.post_create_date >= cast(date_trunc('month',current_date) as date) --이번달의 시작일부터
and
	"blind".post_mgt.post_create_date <= (date_trunc('MONTH', current_date) + INTERVAL '1 MONTH - 1 day'); --이번달의 마지막날까지
]]> 
</select>


<!-- 4.유저가 이번 달에 작성한 글에 대한 댓글의 갯수 카운트 -->
<!-- 
<select id="getPostReplyCountThisMonth" parameterType="int" resultType="int"> 

</select>
 -->
 
<!-- 5.유저의 연봉랭킹정보 -->
<select id="getSalaryRankingData" parameterType="int" resultType="float"> 
SELECT 
	round( (cast(rank.salaryranking as decimal) / (SELECT count(*) from "blind".SALARY_RANK_MGT) *100),1 )
from
   "blind".SALARY_RANK_MGT target
INNER JOIN    
(
select 
   user_id
   ,salary
  , rank() over(order by salary desc) AS salaryranking 
from
   "blind".SALARY_RANK_MGT
) rank  
ON 
  target.user_id = rank.user_id   
where
  target.user_id = #{userId};
</select>

<!-- 6. 유저의 현재 비밀번호를 수신.(account의 비밀번호는 로그인 시점의 정보인 관계로 최신 비번이 아닐 수 있음)-->
<select id="getCurrentPassword" parameterType="int" resultType="String"> 
SELECT
	user_password
from
 	blind.user_mgt 
where
	blind.user_mgt.user_id = #{userId};
</select>
 
 

<!-- 7.유저의 비밀번호 갱신 -->
<update id="updateToNewPassword" parameterType="java.util.Map" >
update "blind".user_mgt
	set user_password = #{newPassword}
where
	user_id = #{userId}
</update>
 
 

</mapper>